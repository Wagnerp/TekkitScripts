-- Description: Nuclear Power Plant LCD Status Controller
-- Authors:     andersevenrud, larsmaehlum
-- URL:         https://github.com/andersevenrud/TekkitScripts

-- Configuration
clientId = 45
serverId = 44
sleepTimeout = 1

-- Peripherals
wlanOn        = true
wlanSide      = "bottom"
wlanTimeout   = sleepTimeout
lcdSide       = "top"
lcd           = peripheral.wrap(lcdSide)

-- Internal variables
_running = true
_lcdWidth, _lcdHeight = lcd.getSize()

-- 
-- Helper Functions
-- 

function deserialize(o)
  return loadstring(o)
end

function printl(msg, x, y)
  lcd.setCursorPos(x, y)
  lcd.write(msg)
end

function clearConsole()
  term.clear()
  term.setCursorPos(1, 1)
end

function clearLCD()
  lcd.clear()
  lcd.setCursorPos(1, 1)
end

function sendMessage(client, message)
  if wlanOn then
    if type(client) == "table" then
      for i = 1, #client do
        rednet.send(wlanSide, tonumber(client[i]), message)
      end
    else
      rednet.send(wlanSide, tonumber(client), message)
    end
  end
end

function handleMessage(message)
  clearLCD()

  local data = deserialize(message)
  local x    = 1
  for i = 1, #data do
    local contents = data[i].contents
    local info     = data[i].info
    local state    = data[i].state

    printl("Core #1 - ON: "..tostring(state), x, 1)
    printl("Output:   "..info.output, x, 2)
    printl("Heat:     "..info.heat, x, 3)
    printl("Coolant:  "..contents.coolant, x, 4)
    printl("Fuel:     "..contents.fuel, x, 5)
    printl("Depleted: "..contents.depleted, x, 6)

    x = x + 16
  end
end

-- 
-- Main program
-- 

clearConsole()
lcd.setTextScale(1.0)
clearLCD()

-- Startup
if wlanOn then
  rednet.open(wlanSide)
end

while _running do
  senderId, message, distance = rednet.receive(wlanTimeout)
  if senderId then
    print("#", senderId, " ", distance, "m ", message)
    if senderId == serverId then
      handleMessage(message)
    end
  end

  --os.sleep(sleepTimeout)
end

if wlanOn then
  rednet.close(wlanSide)
end
